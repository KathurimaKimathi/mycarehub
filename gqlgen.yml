# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - pkg/profile/presentation/graph/*.graphql

# Where should the generated server code go?
exec:
  filename: pkg/profile/presentation/graph/generated/generated.go
  package: generated

# Uncomment to enable federation
federation:
  filename: pkg/profile/presentation/graph/generated/federation.go
  package: generated

# Where should any generated models go?
model:
  filename: pkg/profile/domain/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  package: graph
  dir: pkg/profile/presentation/graph

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "gitlab.slade360emr.com/go/profile/pkg/profile/domain"
  - "gitlab.slade360emr.com/go/base"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Decimal:
    model:
      - "gitlab.slade360emr.com/go/base.Decimal"
  Date:
    model:
      - "gitlab.slade360emr.com/go/base.Date"
  IdentificationInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.Identification
  IndividualRiderInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.IndividualRider
  IndividualPractitionerInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.IndividualPractitioner
  IndividualPharmaceuticalInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.IndividualPharmaceutical
  IndividualCoachInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.IndividualCoach
  IndividualNutritionInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.IndividualNutrition
  OrganizationRiderInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.OrganizationRider
  OrganizationPractitionerInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.OrganizationPractitioner
  OrganizationProviderInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.OrganizationProvider
  OrganizationNutritionInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.OrganizationNutrition
  OrganizationCoachInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.OrganizationCoach
  OrganizationPharmaceuticalInput:
    model:
      - gitlab.slade360emr.com/go/profile/pkg/profile/domain.OrganizationPharmaceutical
