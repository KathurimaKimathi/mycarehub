image: eu.gcr.io/savannah-emr/golang-ci-image:0.0.6

stages:
  - test
  - docs
  - deploy

variables:
  GOOGLE_APPLICATION_CREDENTIALS: $CI_PROJECT_DIR/bewell-app-ci.json
  BEWELL_CLI_VERSION: v0.0.142 #explicit version -> avoid breakages that might occur with different versions

services:
  - name: docker:dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]

lint_and_test:
  stage: test
  before_script:
    - bash decrypt_service_account.sh
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.slade360emr.com".insteadOf "https://gitlab.slade360emr.com" 
    - curl -L -o ./install-misspell.sh https://git.io/misspell && sh ./install-misspell.sh
    - go install gitlab.slade360emr.com/go/base/cmd/bewell@$BEWELL_CLI_VERSION
  script:
    - bewell service validate-schema --name onboarding --version $CI_COMMIT_SHA --url https://profile-testing.healthcloud.co.ke/graphql --registry-url $TEST_SCHEMA_REGISTRY_URL
    - staticcheck ./...
    - misspell .
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - golint -set_exit_status $(go list ./... | grep -v /vendor/)
    - errcheck -ignore 'os:.*,' $(go list ./... | grep -v /vendor/)
    - gosec -exclude=G101,G404 ./...
    - go-acc -o coverage.txt --ignore generated,cmd  ./... -- -timeout 20m 
    - grep -v "generated.go" coverage.txt | grep -v "_gen.go" | grep -v "mocks.go" | grep -v "*resolver*go" | grep -v "server.go" > coverage.out
    - go tool cover -html=coverage.out -o coverage.html
    - gocov convert coverage.out > coverage.json
    - gocov report coverage.json > coverage_report.txt
    - tail coverage_report.txt
  resource_group: ci_tests # only one of these will run at a time
  artifacts:
    untracked: true
    paths:
      - $CI_PROJECT_DIR/coverage.txt
      - $CI_PROJECT_DIR/coverage.json
      - $CI_PROJECT_DIR/coverage.html
      - $CI_PROJECT_DIR/coverage_report.txt
  tags:
    - healthcloud-multi


build_docs:
  stage: docs
  image: python:3.8.5
  before_script:
    - pip install -U mkdocs-material mkdocs-material-extensions
  script:
    - cd $CI_PROJECT_DIR/documentation && mkdocs build -c
  tags:
    - healthcloud-multi
  only:
    - develop    
  artifacts:
    paths:
      - $CI_PROJECT_DIR/documentation


deploy_develop_to_staging:
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  before_script:
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_STAGING_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app-testing
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_STAGING_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app-testing
  stage: deploy
  only:
    - develop    
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  resource_group: staging # control deploy concurrency
  script:
    - docker build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app-testing/profile-staging:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app-testing/profile-staging:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy profile-staging --memory=1Gi --image eu.gcr.io/bewell-app-testing/profile-staging:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated --set-env-vars "GOOGLE_CLOUD_PROJECT=$STAGING_GOOGLE_CLOUD_PROJECT,FIREBASE_WEB_API_KEY=$STAGING_FIREBASE_WEB_API_KEY,JWT_KEY=$STAGING_JWT_KEY,ENVIRONMENT=$STAGING_ENVIRONMENT,SERVER_PUBLIC_DOMAIN=$TEST_SERVER_PUBLIC_DOMAIN,SENTRY_DSN=$STAGING_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$STAGING_ROOT_COLLECTION_SUFFIX,ERP_HOST=$STAGING_ERP_HOST,ERP_API_SCHEME=$STAGING_ERP_API_SCHEME,ERP_TOKEN_URL=$STAGING_ERP_TOKEN_URL,ERP_CLIENT_ID=$STAGING_ERP_CLIENT_ID,ERP_CLIENT_SECRET=$STAGING_ERP_CLIENT_SECRET,ERP_USERNAME=$STAGING_ERP_USERNAME,ERP_PASSWORD=$STAGING_ERP_PASSWORD,ERP_GRANT_TYPE=$STAGING_ERP_GRANT_TYPE,ERP_DEFAULT_WORKSTATION_ID=$STAGING_ERP_DEFAULT_WORKSTATION_ID,ERP_DEFAULT_CURRENCY=$STAGING_ERP_DEFAULT_CURRENCY,CHARGE_MASTER_API_HOST=$STAGING_CHARGE_MASTER_API_HOST,CHARGE_MASTER_API_SCHEME=$STAGING_CHARGE_MASTER_API_SCHEME,CHARGE_MASTER_TOKEN_URL=$STAGING_CHARGE_MASTER_TOKEN_URL,CHARGE_MASTER_CLIENT_ID=$STAGING_CHARGE_MASTER_CLIENT_ID,CHARGE_MASTER_CLIENT_SECRET=$STAGING_CHARGE_MASTER_CLIENT_SECRET,CHARGE_MASTER_USERNAME=$STAGING_CHARGE_MASTER_USERNAME,CHARGE_MASTER_PASSWORD=$STAGING_CHARGE_MASTER_PASSWORD,CHARGE_MASTER_GRANT_TYPE=$STAGING_CHARGE_MASTER_GRANT_TYPE,CLIENT_ID=$STAGING_CLIENT_ID,CLIENT_SECRET=$STAGING_CLIENT_SECRET,TOKEN_URL=$STAGING_TOKEN_URL,HOST=$STAGING_HOST,API_SCHEME=$STAGING_API_SCHEME,GRANT_TYPE=$STAGING_GRANT_TYPE,CORE_CLIENT_ID=$STAGING_CORE_CLIENT_ID,CORE_CLIENT_SECRET=$STAGING_CORE_CLIENT_SECRET,CORE_USERNAME=$STAGING_CORE_USERNAME,CORE_PASSWORD=$STAGING_CORE_PASSWORD,CORE_GRANT_TYPE=$STAGING_CORE_GRANT_TYPE,CORE_API_SCHEME=$STAGING_CORE_API_SCHEME,CORE_TOKEN_URL=$STAGING_CORE_TOKEN_URL,CORE_HOST=$STAGING_CORE_HOST,REPOSITORY=$REPOSITORY,SERVICE_HOST=$STAGING_SERVICE_HOST,GOOGLE_PROJECT_NUMBER=$STAGING_GOOGLE_PROJECT_NUMBER,SAVANNAH_ADMIN_EMAIL=$SAVANNAH_ADMIN_EMAIL"
    - |
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker profile-staging --quiet
  tags:
    - healthcloud-multi
      

deploy_docs:
  stage: deploy
  image: docker:19.03.12-dind
  before_script:
    - apk add --update --no-cache python3 && ln -sf python3 /usr/bin/python && python3 -m ensurepip
    - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
    - tar zxf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
    - alias gcloud=/google-cloud-sdk/bin/gcloud
    - google-cloud-sdk/bin/gcloud components install alpha --quiet
  needs:
    - job: build_docs
      artifacts: true
  only:
    - develop      
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  resource_group: staging # control deploy concurrency
  script:
    - docker build -q -f $CI_PROJECT_DIR/documentation/Dockerfile $CI_PROJECT_DIR/documentation -t eu.gcr.io/bewell-app/profile-service-docs:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/profile-service-docs:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - google-cloud-sdk/bin/gcloud run deploy profile-service-docs --image eu.gcr.io/bewell-app/profile-service-docs:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated
    - google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker profile-service-docs --quiet
  tags:
    - healthcloud-multi

deploy_develop_to_test:
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  before_script:
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
    - apk add go git --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community # has latest version of go
    - export PATH=$PATH:$(go env GOPATH)/bin
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.slade360emr.com".insteadOf "https://gitlab.slade360emr.com"
    - go install gitlab.slade360emr.com/go/base/cmd/bewell@$BEWELL_CLI_VERSION
  stage: deploy
  only:
    - develop    
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $TESTING_GATEWAY_RELOAD_ENDPOINT
  resource_group: testing # control deploy concurrency
  script:
    - docker build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/profile-testing:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/profile-testing:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy profile-testing --memory=1Gi --image eu.gcr.io/bewell-app/profile-testing:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated  --set-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,JWT_KEY=$TESTING_JWT_KEY,ENVIRONMENT=$TESTING_ENVIRONMENT,SENTRY_DSN=$STAGING_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$DEMO_ROOT_COLLECTION_SUFFIX,ERP_HOST=$ERP_HOST,ERP_API_SCHEME=$ERP_API_SCHEME,ERP_TOKEN_URL=$ERP_TOKEN_URL,ERP_CLIENT_ID=$ERP_CLIENT_ID,ERP_CLIENT_SECRET=$ERP_CLIENT_SECRET,ERP_USERNAME=$ERP_USERNAME,ERP_PASSWORD=$ERP_PASSWORD,ERP_GRANT_TYPE=$ERP_GRANT_TYPE,  ERP_DEFAULT_WORKSTATION_ID=$ERP_DEFAULT_WORKSTATION_ID,ERP_DEFAULT_CURRENCY=$ERP_DEFAULT_CURRENCY,CHARGE_MASTER_API_HOST=$CHARGE_MASTER_API_HOST,CHARGE_MASTER_API_SCHEME=$CHARGE_MASTER_API_SCHEME,CHARGE_MASTER_TOKEN_URL=$CHARGE_MASTER_TOKEN_URL,CHARGE_MASTER_CLIENT_ID=$CHARGE_MASTER_CLIENT_ID,CHARGE_MASTER_CLIENT_SECRET=$CHARGE_MASTER_CLIENT_SECRET,CHARGE_MASTER_USERNAME=$CHARGE_MASTER_USERNAME,CHARGE_MASTER_PASSWORD=$CHARGE_MASTER_PASSWORD,CHARGE_MASTER_GRANT_TYPE=$CHARGE_MASTER_GRANT_TYPE,CLIENT_ID=$CLIENT_ID,CLIENT_SECRET=$CLIENT_SECRET,TOKEN_URL=$TOKEN_URL,HOST=$HOST,API_SCHEME=$API_SCHEME,GRANT_TYPE=$GRANT_TYPE,CORE_CLIENT_ID=$CORE_CLIENT_ID,CORE_CLIENT_SECRET=$CORE_CLIENT_SECRET,CORE_USERNAME=$CORE_USERNAME,CORE_PASSWORD=$CORE_PASSWORD,CORE_GRANT_TYPE=$CORE_GRANT_TYPE,CORE_API_SCHEME=$CORE_API_SCHEME,CORE_TOKEN_URL=$CORE_TOKEN_URL,CORE_HOST=$CORE_HOST,REPOSITORY=$REPOSITORY,SERVICE_HOST=$TESTING_SERVICE_HOST,GOOGLE_PROJECT_NUMBER=$TESTING_GOOGLE_PROJECT_NUMBER,SAVANNAH_ADMIN_EMAIL=$SAVANNAH_ADMIN_EMAIL"
    - |
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker profile-testing --quiet
    - bewell service push-schema --name onboarding --version $CI_COMMIT_SHA --url https://profile-testing.healthcloud.co.ke/graphql --registry-url $TEST_SCHEMA_REGISTRY_URL
  tags:
    - healthcloud-multi

deploy_develop_to_e2e:
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  before_script:
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
  stage: deploy
  only:
    - develop
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/profile-e2e:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/profile-e2e:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy profile-e2e --memory=1Gi --image eu.gcr.io/bewell-app/profile-e2e:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated  --set-env-vars "GOOGLE_CLOUD_PROJECT=$E2E_GOOGLE_CLOUD_PROJECT,FIREBASE_WEB_API_KEY=$E2E_FIREBASE_WEB_API_KEY,JWT_KEY=$TESTING_JWT_KEY,ENVIRONMENT=$E2E_ENVIRONMENT,SENTRY_DSN=$STAGING_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$E2E_ROOT_COLLECTION_SUFFIX,ERP_HOST=$ERP_HOST,ERP_API_SCHEME=$ERP_API_SCHEME,ERP_TOKEN_URL=$ERP_TOKEN_URL,ERP_CLIENT_ID=$ERP_CLIENT_ID,ERP_CLIENT_SECRET=$ERP_CLIENT_SECRET,ERP_USERNAME=$ERP_USERNAME,ERP_PASSWORD=$ERP_PASSWORD,ERP_GRANT_TYPE=$ERP_GRANT_TYPE,  ERP_DEFAULT_WORKSTATION_ID=$ERP_DEFAULT_WORKSTATION_ID,ERP_DEFAULT_CURRENCY=$ERP_DEFAULT_CURRENCY,CHARGE_MASTER_API_HOST=$CHARGE_MASTER_API_HOST,CHARGE_MASTER_API_SCHEME=$CHARGE_MASTER_API_SCHEME,CHARGE_MASTER_TOKEN_URL=$CHARGE_MASTER_TOKEN_URL,CHARGE_MASTER_CLIENT_ID=$CHARGE_MASTER_CLIENT_ID,CHARGE_MASTER_CLIENT_SECRET=$CHARGE_MASTER_CLIENT_SECRET,CHARGE_MASTER_USERNAME=$CHARGE_MASTER_USERNAME,CHARGE_MASTER_PASSWORD=$CHARGE_MASTER_PASSWORD,CHARGE_MASTER_GRANT_TYPE=$CHARGE_MASTER_GRANT_TYPE,CLIENT_ID=$CLIENT_ID,CLIENT_SECRET=$CLIENT_SECRET,TOKEN_URL=$TOKEN_URL,HOST=$HOST,API_SCHEME=$API_SCHEME,GRANT_TYPE=$GRANT_TYPE,CORE_CLIENT_ID=$CORE_CLIENT_ID,CORE_CLIENT_SECRET=$CORE_CLIENT_SECRET,CORE_USERNAME=$CORE_USERNAME,CORE_PASSWORD=$CORE_PASSWORD,CORE_GRANT_TYPE=$CORE_GRANT_TYPE,CORE_API_SCHEME=$CORE_API_SCHEME,CORE_TOKEN_URL=$CORE_TOKEN_URL,CORE_HOST=$CORE_HOST,REPOSITORY=$REPOSITORY,SERVICE_HOST=$E2E_SERVICE_HOST,GOOGLE_PROJECT_NUMBER=$E2E_GOOGLE_PROJECT_NUMBER,SAVANNAH_ADMIN_EMAIL=$SAVANNAH_ADMIN_EMAIL"
    - |
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker profile-e2e --quiet
  tags:
    - healthcloud-multi

deploy_master_to_demo:
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  before_script:
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
    - apk add go git --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community # has latest version of go
    - export PATH=$PATH:$(go env GOPATH)/bin
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.slade360emr.com".insteadOf "https://gitlab.slade360emr.com"
    - go install gitlab.slade360emr.com/go/base/cmd/bewell@$BEWELL_CLI_VERSION
  stage: deploy
  only:
    - master   
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $TESTING_GATEWAY_RELOAD_ENDPOINT
  resource_group: testing # control deploy concurrency
  script:
    - docker build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/profile-demo:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/profile-demo:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy profile-demo --memory=1Gi --image eu.gcr.io/bewell-app/profile-demo:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated  --set-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,JWT_KEY=$TESTING_JWT_KEY,ENVIRONMENT=$DEMO_ENVIRONMENT,SENTRY_DSN=$STAGING_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$DEMO_ROOT_COLLECTION_SUFFIX,ERP_HOST=$ERP_HOST,ERP_API_SCHEME=$ERP_API_SCHEME,ERP_TOKEN_URL=$ERP_TOKEN_URL,ERP_CLIENT_ID=$ERP_CLIENT_ID,ERP_CLIENT_SECRET=$ERP_CLIENT_SECRET,ERP_USERNAME=$ERP_USERNAME,ERP_PASSWORD=$ERP_PASSWORD,ERP_GRANT_TYPE=$ERP_GRANT_TYPE,ERP_DEFAULT_WORKSTATION_ID=$ERP_DEFAULT_WORKSTATION_ID,ERP_DEFAULT_CURRENCY=$ERP_DEFAULT_CURRENCY,CHARGE_MASTER_API_HOST=$CHARGE_MASTER_API_HOST,CHARGE_MASTER_API_SCHEME=$CHARGE_MASTER_API_SCHEME,CHARGE_MASTER_TOKEN_URL=$CHARGE_MASTER_TOKEN_URL,CHARGE_MASTER_CLIENT_ID=$CHARGE_MASTER_CLIENT_ID,CHARGE_MASTER_CLIENT_SECRET=$CHARGE_MASTER_CLIENT_SECRET,CHARGE_MASTER_USERNAME=$CHARGE_MASTER_USERNAME,CHARGE_MASTER_PASSWORD=$CHARGE_MASTER_PASSWORD,CHARGE_MASTER_GRANT_TYPE=$CHARGE_MASTER_GRANT_TYPE,CLIENT_ID=$CLIENT_ID,CLIENT_SECRET=$CLIENT_SECRET,TOKEN_URL=$TOKEN_URL,HOST=$HOST,API_SCHEME=$API_SCHEME,GRANT_TYPE=$GRANT_TYPE,CORE_CLIENT_ID=$CORE_CLIENT_ID,CORE_CLIENT_SECRET=$CORE_CLIENT_SECRET,CORE_USERNAME=$CORE_USERNAME,CORE_PASSWORD=$CORE_PASSWORD,CORE_GRANT_TYPE=$CORE_GRANT_TYPE,CORE_API_SCHEME=$CORE_API_SCHEME,CORE_TOKEN_URL=$CORE_TOKEN_URL,CORE_HOST=$CORE_HOST,REPOSITORY=$REPOSITORY,SERVICE_HOST=$DEMO_SERVICE_HOST,GOOGLE_PROJECT_NUMBER=$DEMO_GOOGLE_PROJECT_NUMBER,SAVANNAH_ADMIN_EMAIL=$SAVANNAH_ADMIN_EMAIL"
    - |
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker profile-demo --quiet
    - bewell service push-schema --name onboarding --version $CI_COMMIT_SHA --url https://profile-demo.healthcloud.co.ke/graphql --registry-url $DEMO_SCHEMA_REGISTRY_URL
  tags:
    - healthcloud-multi


deploy_master_to_prod:
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  before_script:
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
    - apk add go git --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community # has latest version of go
    - export PATH=$PATH:$(go env GOPATH)/bin
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.slade360emr.com".insteadOf "https://gitlab.slade360emr.com"
    - go install gitlab.slade360emr.com/go/base/cmd/bewell@$BEWELL_CLI_VERSION
  stage: deploy
  only:
    - master
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $PROD_GATEWAY_RELOAD_ENDPOINT
  resource_group: prod # control deploy concurrency
  script:
    - docker build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/profile-prod:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/profile-prod:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy profile-prod --memory=1Gi --image eu.gcr.io/bewell-app/profile-prod:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated  --set-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,JWT_KEY=$PROD_JWT_KEY,ENVIRONMENT=$PROD_ENVIRONMENT,SERVER_PUBLIC_DOMAIN=$PROD_SERVER_PUBLIC_DOMAIN,SENTRY_DSN=$PROD_SENTRY_DSN,ROOT_COLLECTION_SUFFIX=$PROD_ROOT_COLLECTION_SUFFIX,ERP_HOST=$PROD_ERP_HOST,ERP_API_SCHEME=$PROD_ERP_API_SCHEME,ERP_TOKEN_URL=$PROD_ERP_TOKEN_URL,ERP_CLIENT_ID=$PROD_ERP_CLIENT_ID,ERP_CLIENT_SECRET=$PROD_ERP_CLIENT_SECRET,ERP_USERNAME=$PROD_ERP_USERNAME,ERP_PASSWORD=$PROD_ERP_PASSWORD,ERP_GRANT_TYPE=$PROD_ERP_GRANT_TYPE,ERP_DEFAULT_WORKSTATION_ID=$PROD_ERP_DEFAULT_WORKSTATION_ID,ERP_DEFAULT_CURRENCY=$PROD_ERP_DEFAULT_CURRENCY,CHARGE_MASTER_API_HOST=$PROD_CHARGE_MASTER_API_HOST,CHARGE_MASTER_API_SCHEME=$PROD_CHARGE_MASTER_API_SCHEME,CHARGE_MASTER_TOKEN_URL=$PROD_CHARGE_MASTER_TOKEN_URL,CHARGE_MASTER_CLIENT_ID=$PROD_CHARGE_MASTER_CLIENT_ID,CHARGE_MASTER_CLIENT_SECRET=$PROD_CHARGE_MASTER_CLIENT_SECRET,CHARGE_MASTER_USERNAME=$PROD_CHARGE_MASTER_USERNAME,CHARGE_MASTER_PASSWORD=$PROD_CHARGE_MASTER_PASSWORD,CHARGE_MASTER_GRANT_TYPE=$PROD_CHARGE_MASTER_GRANT_TYPE,CLIENT_ID=$PROD_CLIENT_ID,CLIENT_SECRET=$PROD_CLIENT_SECRET,TOKEN_URL=$PROD_TOKEN_URL,HOST=$PROD_HOST,API_SCHEME=$PROD_API_SCHEME,GRANT_TYPE=$PROD_GRANT_TYPE,CORE_CLIENT_ID=$PROD_CORE_CLIENT_ID,CORE_CLIENT_SECRET=$PROD_CORE_CLIENT_SECRET,CORE_USERNAME=$PROD_CORE_USERNAME,CORE_PASSWORD=$PROD_CORE_PASSWORD,CORE_GRANT_TYPE=$PROD_CORE_GRANT_TYPE,CORE_API_SCHEME=$PROD_CORE_API_SCHEME,CORE_TOKEN_URL=$PROD_CORE_TOKEN_URL,CORE_HOST=$PROD_CORE_HOST,REPOSITORY=$REPOSITORY,SERVICE_HOST=$PROD_SERVICE_HOST,GOOGLE_PROJECT_NUMBER=$PROD_GOOGLE_PROJECT_NUMBER,SAVANNAH_ADMIN_EMAIL=$SAVANNAH_ADMIN_EMAIL"
    - |
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker profile-prod --quiet
    - bewell service push-schema --name onboarding --version $CI_COMMIT_SHA --url https://profile-prod.healthcloud.co.ke/graphql --registry-url $PROD_SCHEMA_REGISTRY_URL
  tags:
    - healthcloud-multi

